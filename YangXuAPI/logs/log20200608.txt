2020-06-08 17:32:38.516 +08:00 [INF] Entity Framework Core 3.1.3 initialized 'RoutineDbContext' using provider 'MySql.Data.EntityFrameworkCore' with options: None
2020-06-08 17:32:39.203 +08:00 [INF] Executed DbCommand (68ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE IF EXISTS `AspNetCore`;
2020-06-08 17:32:39.271 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE `AspNetCore`
2020-06-08 17:32:39.546 +08:00 [INF] Executed DbCommand (45ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE `__EFMigrationsHistory` (
    `MigrationId` varchar(150) NOT NULL,
    `ProductVersion` varchar(32) NOT NULL,
    PRIMARY KEY (`MigrationId`)
);
2020-06-08 17:32:39.563 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1 FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA='AspNetCore' AND TABLE_NAME='__EFMigrationsHistory';
2020-06-08 17:32:39.588 +08:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT `MigrationId`, `ProductVersion`
FROM `__EFMigrationsHistory`
ORDER BY `MigrationId`;
2020-06-08 17:32:39.616 +08:00 [INF] Applying migration '20200520071258_Init'.
2020-06-08 17:32:39.702 +08:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE `Companies` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `Name` varchar(100) NOT NULL,
    `Introduction` varchar(500) NULL,
    `Country` varchar(50) NULL,
    `Industry` varchar(50) NULL,
    `Product` varchar(100) NULL,
    PRIMARY KEY (`Id`)
);
2020-06-08 17:32:39.735 +08:00 [INF] Executed DbCommand (30ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE `Employees` (
    `Id` int NOT NULL AUTO_INCREMENT,
    `CompanyId` int NOT NULL,
    `EmployeeNo` varchar(10) NOT NULL,
    `FirstName` varchar(50) NOT NULL,
    `LastName` varchar(50) NOT NULL,
    `Gender` int NOT NULL,
    `DateOfBirth` datetime NOT NULL,
    PRIMARY KEY (`Id`),
    CONSTRAINT `FK_Employees_Companies_CompanyId` FOREIGN KEY (`CompanyId`) REFERENCES `Companies` (`Id`) ON DELETE CASCADE
);
2020-06-08 17:32:39.797 +08:00 [INF] Executed DbCommand (56ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (1, 'USA', 'Software', 'Great Company', 'Microsoft', 'Software');
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (16, 'USA', 'Internet', 'Not Exists?', 'AOL', 'Website');
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (15, 'USA', 'ECommerce', 'Store', 'Amazon', 'Books');
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (14, 'China', 'Internet', 'Music?', 'NetEase', 'Songs');
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (13, 'China', 'ECommerce', 'Brothers', 'Jingdong', 'Goods');
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (12, 'China', 'Security', '- -', '360', 'Security Product');
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (11, 'USA', 'Internet', 'Blocked', 'Youtube', 'Videos');
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (10, 'USA', 'Internet', 'Blocked', 'Twitter', 'Tweets');
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (9, 'China', 'ECommerce', 'From Jiangsu', 'Suning', 'Goods');
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (8, 'Italy', 'Football', 'Football Club', 'AC Milan', 'Football Match');
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (7, 'USA', 'Technology', 'Wow', 'SpaceX', 'Rocket');
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (6, 'USA', 'Software', 'Photoshop?', 'Adobe', 'Software');
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (5, 'China', 'Internet', 'From Beijing', 'Baidu', 'Software');
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (4, 'China', 'ECommerce', 'From Shenzhen', 'Tencent', 'Software');
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (3, 'China', 'Internet', 'Fubao Company', 'Alipapa', 'Software');
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (2, 'USA', 'Internet', 'Don''t be evil', 'Google', 'Software');
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (17, 'USA', 'Internet', 'Who?', 'Yahoo', 'Mail');
INSERT INTO `Companies` (`Id`, `Country`, `Industry`, `Introduction`, `Name`, `Product`)
VALUES (18, 'USA', 'Internet', 'Is it a company?', 'Firefox', 'Browser');
2020-06-08 17:32:39.838 +08:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO `Employees` (`Id`, `CompanyId`, `DateOfBirth`, `EmployeeNo`, `FirstName`, `Gender`, `LastName`)
VALUES (1, 1, '2000-01-02 00:00:00.000000', '00001', 'Nick', 2, 'Smith');
INSERT INTO `Employees` (`Id`, `CompanyId`, `DateOfBirth`, `EmployeeNo`, `FirstName`, `Gender`, `LastName`)
VALUES (2, 1, '2000-01-02 00:00:00.000000', '00002', 'Linda', 1, 'Trump');
INSERT INTO `Employees` (`Id`, `CompanyId`, `DateOfBirth`, `EmployeeNo`, `FirstName`, `Gender`, `LastName`)
VALUES (3, 2, '2000-01-02 00:00:00.000000', '00003', 'Crole', 1, 'Fories');
INSERT INTO `Employees` (`Id`, `CompanyId`, `DateOfBirth`, `EmployeeNo`, `FirstName`, `Gender`, `LastName`)
VALUES (4, 2, '2000-01-02 00:00:00.000000', '00004', 'Kobe', 2, 'Brant');
INSERT INTO `Employees` (`Id`, `CompanyId`, `DateOfBirth`, `EmployeeNo`, `FirstName`, `Gender`, `LastName`)
VALUES (5, 3, '2000-01-02 00:00:00.000000', '00005', 'Dora', 1, 'Smith');
INSERT INTO `Employees` (`Id`, `CompanyId`, `DateOfBirth`, `EmployeeNo`, `FirstName`, `Gender`, `LastName`)
VALUES (6, 3, '2000-01-02 00:00:00.000000', '00006', 'Jack', 2, 'Ma');
2020-06-08 17:32:39.878 +08:00 [INF] Executed DbCommand (32ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX `IX_Employees_CompanyId` ON `Employees` (`CompanyId`);
2020-06-08 17:32:39.889 +08:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO `__EFMigrationsHistory` (`MigrationId`, `ProductVersion`)
VALUES ('20200520071258_Init', '3.1.3');
2020-06-08 17:32:39.976 +08:00 [INF] User profile is available. Using 'C:\Users\Yunjie.Yao\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2020-06-08 17:32:40.322 +08:00 [INF] Now listening on: http://localhost:5000
2020-06-08 17:32:40.324 +08:00 [INF] Application started. Press Ctrl+C to shut down.
2020-06-08 17:32:40.326 +08:00 [INF] Hosting environment: Development
2020-06-08 17:32:40.328 +08:00 [INF] Content root path: D:\Code\AspNetCoreSolution\YangXuAPI
2020-06-08 17:32:42.817 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/companies  
2020-06-08 17:32:42.856 +08:00 [INF] Checking for conditional GET/HEAD.
2020-06-08 17:32:42.871 +08:00 [INF] Not valid - no If-None-Match or If-Modified-Since headers.
2020-06-08 17:32:42.872 +08:00 [INF] Don't generate 304 - Not Modified.  Continue.
2020-06-08 17:32:42.875 +08:00 [INF] Checking for conditional PUT/PATCH.
2020-06-08 17:32:42.876 +08:00 [INF] Not valid - method isn't PUT or PATCH.
2020-06-08 17:32:42.877 +08:00 [INF] Don't generate 412 - Precondition Failed.  Continue.
2020-06-08 17:32:43.003 +08:00 [INF] Executing endpoint 'YangXuAPI.Controllers.CompaniesController.GetCompanies (YangXuAPI)'
2020-06-08 17:32:43.067 +08:00 [INF] Route matched with {action = "GetCompanies", controller = "Companies"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Collections.Generic.IEnumerable`1[YangXuAPI.Models.CompanyDto]]] GetCompanies(YangXuAPI.DtoParameters.CompanyDtoParameters) on controller YangXuAPI.Controllers.CompaniesController (YangXuAPI).
2020-06-08 17:32:43.588 +08:00 [INF] Executing action method YangXuAPI.Controllers.CompaniesController.GetCompanies (YangXuAPI) - Validation state: "Valid"
2020-06-08 17:32:43.638 +08:00 [INF] Entity Framework Core 3.1.3 initialized 'RoutineDbContext' using provider 'MySql.Data.EntityFrameworkCore' with options: None
2020-06-08 17:32:44.461 +08:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM `Companies` AS `c`
2020-06-08 17:32:44.658 +08:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT `c`.`Id`, `c`.`Country`, `c`.`Industry`, `c`.`Introduction`, `c`.`Name`, `c`.`Product`
FROM `Companies` AS `c`
ORDER BY `c`.`Name`
LIMIT @__p_1 OFFSET @__p_0
2020-06-08 17:32:45.085 +08:00 [INF] Executed action method YangXuAPI.Controllers.CompaniesController.GetCompanies (YangXuAPI), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1467.0798ms.
2020-06-08 17:32:45.259 +08:00 [INF] Executing ObjectResult, writing value of type 'System.Collections.Generic.List`1[[YangXuAPI.Models.CompanyDto, YangXuAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2020-06-08 17:32:45.601 +08:00 [INF] Executed action YangXuAPI.Controllers.CompaniesController.GetCompanies (YangXuAPI) in 2518.5132000000003ms
2020-06-08 17:32:45.606 +08:00 [INF] Executed endpoint 'YangXuAPI.Controllers.CompaniesController.GetCompanies (YangXuAPI)'
2020-06-08 17:32:45.612 +08:00 [INF] Generating expiration headers.
2020-06-08 17:32:45.618 +08:00 [INF] Expiration headers generated. Expires: Mon, 08 Jun 2020 09:33:45 GMT. Cache-Control: private,max-age=60,must-revalidate.
2020-06-08 17:32:45.623 +08:00 [INF] Generating Validation headers.
2020-06-08 17:32:45.640 +08:00 [INF] Validation headers generated. ETag: Strong, "CB739C26ACDA60780C6435BDEB6E037D". Last-Modified: Mon, 08 Jun 2020 09:32:45 GMT
2020-06-08 17:32:45.644 +08:00 [INF] Generating Vary header.
2020-06-08 17:32:45.647 +08:00 [INF] Vary header generated: Accept, Accept-Language, Accept-Encoding.
2020-06-08 17:32:45.673 +08:00 [INF] Request finished in 2863.493ms 200 application/json; charset=utf-8
2020-06-08 17:32:45.862 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/favicon.ico  
2020-06-08 17:32:45.863 +08:00 [INF] Checking for conditional GET/HEAD.
2020-06-08 17:32:45.865 +08:00 [INF] Not valid - no If-None-Match or If-Modified-Since headers.
2020-06-08 17:32:45.866 +08:00 [INF] Don't generate 304 - Not Modified.  Continue.
2020-06-08 17:32:45.868 +08:00 [INF] Checking for conditional PUT/PATCH.
2020-06-08 17:32:45.869 +08:00 [INF] Not valid - method isn't PUT or PATCH.
2020-06-08 17:32:45.874 +08:00 [INF] Don't generate 412 - Precondition Failed.  Continue.
2020-06-08 17:32:45.880 +08:00 [INF] Generating expiration headers.
2020-06-08 17:32:45.882 +08:00 [INF] Expiration headers generated. Expires: Mon, 08 Jun 2020 09:33:45 GMT. Cache-Control: private,max-age=60,must-revalidate.
2020-06-08 17:32:45.886 +08:00 [INF] Not generating Validation headers as the response status code does not indicate succes.
2020-06-08 17:32:45.888 +08:00 [INF] Generating Vary header.
2020-06-08 17:32:45.892 +08:00 [INF] Vary header generated: Accept, Accept-Language, Accept-Encoding.
2020-06-08 17:32:45.899 +08:00 [INF] Request finished in 37.841100000000004ms 404 
2020-06-08 17:32:57.198 +08:00 [INF] Request starting HTTP/1.1 GET http://localhost:5000/api/companies/1/employees/2  
2020-06-08 17:32:57.204 +08:00 [INF] Checking for conditional GET/HEAD.
2020-06-08 17:32:57.205 +08:00 [INF] Not valid - no If-None-Match or If-Modified-Since headers.
2020-06-08 17:32:57.207 +08:00 [INF] Don't generate 304 - Not Modified.  Continue.
2020-06-08 17:32:57.210 +08:00 [INF] Checking for conditional PUT/PATCH.
2020-06-08 17:32:57.212 +08:00 [INF] Not valid - method isn't PUT or PATCH.
2020-06-08 17:32:57.213 +08:00 [INF] Don't generate 412 - Precondition Failed.  Continue.
2020-06-08 17:32:57.223 +08:00 [INF] Executing endpoint 'YangXuAPI.Controllers.EmployeesController.GetEmployeeFromCompany (YangXuAPI)'
2020-06-08 17:32:57.237 +08:00 [INF] Route matched with {action = "GetEmployeeFromCompany", controller = "Employees"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[YangXuAPI.Models.EmployeeDto]] GetEmployeeFromCompany(Int32, Int32) on controller YangXuAPI.Controllers.EmployeesController (YangXuAPI).
2020-06-08 17:32:57.303 +08:00 [INF] Executing action method YangXuAPI.Controllers.EmployeesController.GetEmployeeFromCompany (YangXuAPI) - Validation state: "Valid"
2020-06-08 17:32:59.658 +08:00 [ERR] GetEmployeeFromCompany/Input,companyId=1,employeeId=2
